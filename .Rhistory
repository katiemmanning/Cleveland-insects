combined <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTERandBahlai.csv", na.strings = NULL)
#change week to characters
#combined$week <- as.character(combined$week)
#change CARD, TREAT, REP, and STATION to factor
combined$CARD <- as.factor(combined$CARD)
combined$TREAT <- as.factor(combined$TREAT)
combined$REP <- as.factor(combined$REP)
combined$STATION <- as.factor(combined$STATION)
str(combined)
summary(combined)
#remove rows with NAs (missing data from either LTER or Bahlai)
combined.na <- na.omit(combined)
#Melt into long format to pool across reps
library (reshape2)
combined.long <- melt(combined.na, id.vars = c("week", "TREAT", "REP", "STATION", "CARD"),
variable.name = "SPID", value.name = "SumOfADULTS")
library(dplyr)
insects_rep<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN = sum)
insects_rep_N<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN=length)
insects_rep_N<-rename(insects_rep_N, TRAPS=SumOfADULTS)
#merge trap data into insects_rep data frame
insects_merged<-merge(insects_rep, insects_rep_N)
#pool across reps and put back into wide format
insects <-dcast(insects_merged, week+TREAT+STATION+CARD~SPID,
value.var ="SumOfADULTS",  sum)
View(insects)
View(insects_merged)
View(insects_rep_N)
#change variable name to reflect that it's number of traps
insects_rep_N<-rename(insects_rep_N, TRAPS=SumOfADULTS)
#null out SPID
insects_rep_N$SPID<-NULL
#create new dataframe that's just the number of traps
insects_traps<-insects_rep_N[!duplicated(insects_rep_N), ]
View(insects_traps)
insects_rep<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN = sum)
insects_rep_N<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN=length)
#change variable name to reflect that it's number of traps
insects_rep_N<-rename(insects_rep_N, TRAPS=SumOfADULTS)
#null out SPID column
insects_rep_N$SPID<-NULL
#create new dataframe that's just the number of traps
insects_traps<-insects_rep_N[!duplicated(insects_rep_N), ]
#pool across reps and put back into wide format
insects <-dcast(insects_merged, week+TREAT+STATION+CARD~SPID,
value.var ="SumOfADULTS",  sum)
View(insects)
#pool across reps and put back into wide format
insect <-dcast(insects_merged, week+TREAT+STATION+CARD~SPID,
value.var ="SumOfADULTS",  sum)
View(insect)
#merge "traps" with "insects"
insects <- merge(insect, traps, all.x=TRUE)
#merge "traps" with "insects"
insects <- merge(insect, insects_traps, all.x=TRUE)
View(insects)
#NMDS of insect community between card types
library (vegan)
#Create matrix of environmental variables
env.matrix<-insects[c(1:4)]
#Create matrix of environmental variables
env.matrix<-insects[c(1:4,30)]
#create matrix of community variables
com.matrix<-insects[c(5:29)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=100) #stress=.24 -- no convergence
#NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=FALSE, trymax=100) #stress=.06 -- no convergence
NMDS
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New"), pch=17, col="#009E73")
#add legend
legend(1.315,1.684, title=NULL, pch=c(19,17), col=c("#E69F00","#009E73"), cex=1.2, legend=c("Old cards", "New cards"))
#bootstrapping and testing for differences between the groups (cards)
fit<-adonis(com.matrix ~ CARD, data = env.matrix, permutations = 999, method="bray")
fit
#This is really doing the same thing
library(pairwiseAdonis)
pairwise.adonis(com.matrix, env.matrix$CARD)
insects.rowsums <- rowSums(insects[,5:29]>0)
insects$richness <- insects.rowsums
#To obtain abundance counts
insects.abun <- rowSums(insects[,5:29])
insects$abundance <- insects.abun
#calculate Shannon diversity
diversity <-diversity(insects[,5:29])
insects$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(insects[,5:29]))
insects$evenness <- evenness
library(lme4)
library(lmerTest) #to obtain p values
library (car) #Anova (needed because of negative binomial)  ##if we don't use neg binomial switch to "anova"
citation("car")
library (nortest)
library(bbmle)
library(DHARMa)
library(ggplot2)
library(sjPlot)
library (jtools)
library(interactions)
library(emmeans)
#WORK ON THESE
#richness
#AIC 1179
richness.model<-lm(richness ~ CARD + week + TREAT + offset(TRAPS), data=insects)
#richness.model<-lmer(richness ~ CARD + week + (1 | TREAT:STATION), data=insects)
summary(richness.model)
Anova (richness.model)
AIC(richness.model)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
#check assumptions
dotchart(insects$richness, main = "richness", group = insects$CARD) # way to visualize outliers
#WORK ON THESE
#richness
#AIC 1183
richness.model<-glm(richness ~ CARD + week + TREAT + offset(TRAPS), data=insects)
#richness.model<-lmer(richness ~ CARD + week + (1 | TREAT:STATION), data=insects)
summary(richness.model)
Anova (richness.model)
AIC(richness.model)
anova (richness.model)
#WORK ON THESE
#richness
#AIC 1183
richness.model<-glm(richness ~ CARD + week + TREAT + offset(TRAPS), data=insects)
Anova (richness.model)
richness.model<-lm(richness ~ CARD + week + TREAT + offset(TRAPS), data=insects)
#richness.model<-lmer(richness ~ CARD + week + (1 | TREAT:STATION), data=insects)
summary(richness.model)
Anova (richness.model)
#WORK ON THESE
#richness
#AIC 1183
richness.model<-glm(richness ~ CARD + week + TREAT + offset(TRAPS), data=insects)
Anova (richness.model)
anova (richness.model)
richness.model<-lm(richness ~ CARD + week + TREAT + offset(TRAPS), data=insects)
anova (richness.model)
#WORK ON THESE
#richness
#AIC 1183
richness.model<-glm(richness ~ CARD + week + TREAT + offset(TRAPS), data=insects)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
richness.model<-lm(richness ~ CARD + week + TREAT + offset(TRAPS), data=insects)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
#WORK ON THESE
#richness
#AIC 1183
richness.model<-glm(richness ~ CARD + week + TREAT + offset(TRAPS), data=insects)
#check assumptions
dotchart(insects$richness, main = "richness", group = insects$CARD) # way to visualize outliers
with(insects, ad.test(richness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(insects, bartlett.test(richness ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(richness.model) # check distribution of residuals
qqline(resid(richness.model))
plot(simulateResiduals(richness.model)) # another way to check for normality and homogeneity of variance
with(insects, ad.test(richness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(insects, bartlett.test(richness ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
densityPlot(rstudent(richness.model)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(richness.model)
influenceIndexPlot(richness.model, vars = c("Cook"), id = list(n = 3))
AIC(richness.model)
#abundance
##AIC 3846
richness.model<-glm(richness ~ CARD + week + TREAT + offset(TRAPS), data=insects)
AIC(abundance.model)
#abundance
##AIC 3846
abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects)
#abundance.model<-glmer(abundance ~ CARD + week + (1 | TREAT:STATION), data=insects, family = negative.binomial (4)) #meets normality assumptions
summary(abundance.model)
Anova(abundance.model)
AIC(abundance.model)
#pairwise comparison
abun.emm<-emmeans(abundance.model,pairwise~CARD)
abun.emm
#check assumptions
dotchart(insects$abundance, main = "abundance", group = insects$CARD) # way to visualize outliers
plot(simulateResiduals(abundance.model)) # another way to check for normality and homogeneity of variance
#abundance
##AIC 3846
abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = negative.binomial (4))
#abundance.model<-glmer(abundance ~ CARD + week + (1 | TREAT:STATION), data=insects, family = negative.binomial (4)) #meets normality assumptions
summary(abundance.model)
Anova(abundance.model)
AIC(abundance.model)
#pairwise comparison
abun.emm<-emmeans(abundance.model,pairwise~CARD)
abun.emm
#abundance
##AIC 3585
abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = negative.binomial (4))
#pairwise comparison
abun.emm<-emmeans(abundance.model,pairwise~CARD)
abun.emm
with(insects, ad.test(abundance)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(insects, bartlett.test(abundance ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(abundance.model) # check distribution of residuals
plot(simulateResiduals(abundance.model)) # another way to check for normality and homogeneity of variance
plot(simulateResiduals(abundance.model)) # another way to check for normality and homogeneity of variance
#diversity
##AIC 37
diversity.model<-glm(diversity ~ CARD + week + TREAT + offset(TRAPS), data=insects)
#pairwise comparison
div.emm<-emmeans(diversity.model,pairwise~TRAPS)
div.emm
#diversity.model<-lmer(diversity ~ CARD + week + (1 | TREAT:STATION), data=insects) #no sig diff btw cards #AIC = 116
summary(diversity.model)
Anova(diversity.model)
AIC(diversity.model)
abundance.model<-glm(abundance ~ CARD + week + TREAT, data=insects)  #does not meet normality assumptions
#check assumptions
dotchart(insects$abundance, main = "abundance", group = insects$CARD) # way to visualize outliers
#abundance
##AIC 3585
abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = negative.binomial (4))
#check assumptions
dotchart(insects$abundance, main = "abundance", group = insects$CARD) # way to visualize outliers
richness.model<-glm(richness ~ CARD + week + TREAT + offset = TRAPS, data=insects)
richness.model<-glm(richness ~ CARD + week + TREAT, offset = TRAPS, data=insects)
summary(richness.model)
Anova (richness.model)
AIC(richness.model)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
richness.model<-glm(richness ~ CARD + week + TREAT + offset(TRAPS), data=insects)
summary(richness.model)
Anova (richness.model)
AIC(richness.model)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
#results: no sig diff btw cards (p=0.8897)
#check assumptions
dotchart(insects$richness, main = "richness", group = insects$CARD) # way to visualize outliers
with(insects, ad.test(richness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
#p-value = 1.577e-10
with(insects, bartlett.test(richness ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
#p-value = 0.3633
plot(richness.model) # check distribution of residuals
plot(simulateResiduals(richness.model)) # another way to check for normality and homogeneity of variance
#KS test: p = 0.60684
#dispersion test: p = 0.608
#outlier test: p = 0.73751
#no significant problems detected
densityPlot(rstudent(richness.model)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(richness.model)
influenceIndexPlot(richness.model, vars = c("Cook"), id = list(n = 3))
abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects)  #does not meet normality assumptions
#abundance.model<-glmer(abundance ~ CARD + week + (1 | TREAT:STATION), data=insects, family = negative.binomial (4)) #meets normality assumptions
summary(abundance.model)
Anova(abundance.model)
AIC(abundance.model)
#pairwise comparison
abun.emm<-emmeans(abundance.model,pairwise~CARD)
abun.emm
#check assumptions
dotchart(insects$abundance, main = "abundance", group = insects$CARD) # way to visualize outliers
plot(simulateResiduals(abundance.model)) # another way to check for normality and homogeneity of variance
#abundance
##AIC 3585
abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = negative.binomial (4))
plot(simulateResiduals(abundance.model)) # another way to check for normality and homogeneity of variance
#abundance
##AIC 3585
abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = negative.binomial (2))
#pairwise comparison
abun.emm<-emmeans(abundance.model,pairwise~CARD)
abun.emm
plot(simulateResiduals(abundance.model)) # another way to check for normality and homogeneity of variance
install.packages("MASS")
plot(simulateResiduals(abundance.model)) # another way to check for normality and homogeneity of variance
#abundance
##AIC 3585
abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = negative.binomial (2))
#abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects)  #does not meet normality assumptions
summary(abundance.model)
Anova(abundance.model)
AIC(abundance.model)
plot(simulateResiduals(abundance.model)) # another way to check for normality and homogeneity of variance
#diversity
##AIC 151
diversity.model<-glm(diversity ~ CARD + week + TREAT + offset(TRAPS), data=insects)
#diversity.model<-lmer(diversity ~ CARD + week + (1 | TREAT:STATION), data=insects) #no sig diff btw cards #AIC = 116
summary(diversity.model)
Anova(diversity.model)
AIC(diversity.model)
#pairwise comparison
div.emm<-emmeans(diversity.model,pairwise~CARD)
div.emm
#check assumptions
dotchart(insects$diversity, main = "diversity", group = insects$CARD) # way to visualize outliers
with(insects, ad.test(diversity)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(insects, bartlett.test(diversity ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(diversity.model) # check distribution of residuals
plot(simulateResiduals(diversity.model)) # another way to check for normality and homogeneity of variance
#diversity
##AIC 151
diversity.model<-glm(diversity ~ CARD + week + TREAT + offset(TRAPS), data=insects)
#diversity.model<-lmer(diversity ~ CARD + week + (1 | TREAT:STATION), data=insects) #no sig diff btw cards #AIC = 116
summary(diversity.model)
Anova(diversity.model)
#richness
#AIC 1183
richness.model<-lm(richness ~ CARD + week + TREAT + offset(TRAPS), data=insects)
summary(richness.model)
Anova (richness.model)
AIC(richness.model)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
abundance.model<-lm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects)  #does not meet normality assumptions
plot(simulateResiduals(richness.model)) # another way to check for normality and homogeneity of variance
abundance.model<-lm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects)  #does not meet normality assumptions
summary(abundance.model)
Anova(abundance.model)
AIC(abundance.model)
#pairwise comparison
abun.emm<-emmeans(abundance.model,pairwise~CARD)
abun.emm
plot(simulateResiduals(abundance.model)) # another way to check for normality and homogeneity of variance
#abundance
##AIC 3574
abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = negative.binomial (2))
#abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects)  #does not meet normality assumptions
summary(abundance.model)
Anova(abundance.model)
AIC(abundance.model)
#check assumptions
dotchart(insects$abundance, main = "abundance", group = insects$CARD) # way to visualize outliers
with(insects, ad.test(abundance)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(insects, bartlett.test(abundance ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
#abundance
##AIC 3574
abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = negative.binomial (4))
#abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects)  #does not meet normality assumptions
summary(abundance.model)
Anova(abundance.model)
AIC(abundance.model)
#pairwise comparison
abun.emm<-emmeans(abundance.model,pairwise~CARD)
abun.emm
#check assumptions
dotchart(insects$abundance, main = "abundance", group = insects$CARD) # way to visualize outliers
with(insects, ad.test(abundance)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(insects, bartlett.test(abundance ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(abundance.model) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model))
abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects)  #does not meet normality assumptions
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model))
#abundance
##AIC 3574
abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = negative.binomial (2))
# check normality with these figures, are there outliers at either end
qqnorm(resid(abundance.model))
#abundance
##AIC 3574
abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = negative.binomial (4))
plot(simulateResiduals(abundance.model)) # another way to check for normality and homogeneity of variance
densityPlot(rstudent(abundance.model)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(abundance.model)
influenceIndexPlot(abundance.model, vars = c("Cook"), id = list(n = 3))
#diversity
##AIC 151
diversity.model<-glm(diversity ~ CARD + week + TREAT + offset(TRAPS), data=insects)
#diversity.model<-lmer(diversity ~ CARD + week + (1 | TREAT:STATION), data=insects) #no sig diff btw cards #AIC = 116
summary(diversity.model)
Anova(diversity.model)
AIC(diversity.model)
#pairwise comparison
div.emm<-emmeans(diversity.model,pairwise~CARD)
div.emm
#check assumptions
dotchart(insects$diversity, main = "diversity", group = insects$CARD) # way to visualize outliers
with(insects, ad.test(diversity)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(insects, bartlett.test(diversity ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(diversity.model) # check distribution of residuals
plot(simulateResiduals(diversity.model)) # another way to check for normality and homogeneity of variance
#diversity
##AIC 151
diversity.model<-glm(diversity ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = negative.binomial (4))
#diversity.model<-lmer(diversity ~ CARD + week + (1 | TREAT:STATION), data=insects) #no sig diff btw cards #AIC = 116
summary(diversity.model)
Anova(diversity.model)
AIC(diversity.model)
#pairwise comparison
div.emm<-emmeans(diversity.model,pairwise~CARD)
div.emm
plot(simulateResiduals(diversity.model)) # another way to check for normality and homogeneity of variance
# check normality with these figures, are there outliers at either end
qqnorm(resid(diversity.model))
#diversity
##AIC 151
diversity.model<-glm(diversity ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = negative.binomial (2))
# check normality with these figures, are there outliers at either end
qqnorm(resid(diversity.model))
#diversity
##AIC 151
diversity.model<-glm(diversity ~ CARD + week + TREAT + offset(TRAPS), data=insects)
plot(simulateResiduals(diversity.model)) # another way to check for normality and homogeneity of variance
#evenness
##AIC -387
evenness.model<-glm(evenness ~ CARD + week + TREAT + offset(TRAPS), data=insects)
#evenness.model<-lmer(evenness ~ CARD + week + (1 | TREAT:STATION), data=insects) #no sig diff between cards #AIC = -267
summary(evenness.model)
Anova(evenness.model)
AIC(evenness.model)
#pairwise comparison
even.emm<-emmeans(evenness.model,pairwise~CARD)
even.emm
evenness.model<-glm(evenness ~ CARD + week + TREAT, data=insects)
#pairwise comparison
even.emm<-emmeans(evenness.model,pairwise~CARD)
even.emm
#evenness
##AIC -387
evenness.model<-glm(evenness ~ CARD + week + TREAT + offset(TRAPS), data=insects)
summary(evenness.model)
Anova(evenness.model)
#pairwise comparison
even.emm<-emmeans(evenness.model,pairwise~CARD)
even.emm
#check assumptions
dotchart(insects$evenness, main = "evenness", group = insects$CARD) # way to visualize outliers
with(insects, ad.test(evenness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(insects, bartlett.test(evenness ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(evenness.model) # check distribution of residuals
qqnorm(resid(evenness.model))
plot(simulateResiduals(evenness.model)) # another way to check for normality and homogeneity of variance
#evenness
##AIC -52
evenness.model<-glm(evenness ~ CARD + week + TREAT + offset(TRAPS), family = negative.binomial (4), data=insects)
#evenness
##AIC -52
evenness.model<-glm(evenness ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = negative.binomial (4))
summary(evenness.model)
Anova(evenness.model)
AIC(evenness.model)
#pairwise comparison
even.emm<-emmeans(evenness.model,pairwise~CARD)
even.emm
# check normality with these figures, are there outliers at either end
qqnorm(resid(evenness.model))
#evenness
##AIC -52
evenness.model<-glm(evenness ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = negative.binomial (2))
#evenness
##AIC -52
evenness.model<-glm(evenness ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = gaussian
#evenness
##AIC -52
evenness.model<-glm(evenness ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = gaussian)
#evenness
##AIC -52
evenness.model<-glm(evenness ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = gaussian)
summary(evenness.model)
Anova(evenness.model)
AIC(evenness.model)
#pairwise comparison
even.emm<-emmeans(evenness.model,pairwise~CARD)
even.emm
# check normality with these figures, are there outliers at either end
qqnorm(resid(evenness.model))
#evenness
##AIC -52
evenness.model<-glm(evenness ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = poisson)
summary(evenness.model)
Anova(evenness.model)
AIC(evenness.model)
#pairwise comparison
even.emm<-emmeans(evenness.model,pairwise~CARD)
even.emm
# check normality with these figures, are there outliers at either end
qqnorm(resid(evenness.model))
plot(simulateResiduals(evenness.model)) # another way to check for normality and homogeneity of variance
pdf("allbugs_boxplot.pdf", height=8, width=8) #height and width in inches
allbugs_boxplot
dev.off()
View(allbugs)
#NMDS of insect community
library (vegan)
#Create matrix of environmental variables
env.matrix<-allbugs[c(1:3,44)]
#create matrix of community variables
com.matrix<-allbugs[c(4:43)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=300)
#change to presence/absence
com.matrix[com.matrix > 0] <- 1
str(com.matrix)
rowSums(com.matrix)
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=300)
NMDS
